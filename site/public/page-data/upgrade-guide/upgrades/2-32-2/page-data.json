{"componentChunkName":"component---src-templates-step-template-js","path":"/upgrade-guide/upgrades/2-32-2/","result":{"data":{"asciidoc":{"html":"<div class=\"sect3\">\n<h4 id=\"_console_notes_security_fix\">Console notes security fix</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-382</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Console notes, the often bold or colored additions to build logs by plugins such as plugin:timestamper[Timestamper] or plugin:ansicolor[AnsiColor], that were created before you upgrade to Jenkins 2.43 or 2.32.2 will no longer be loaded for security reasons.\nTo restore the previous (unsafe) behavior, set the system property <code>hudson.console.ConsoleNote.INSECURE</code> to <code>true</code> as described on <a href=\"/doc/book/managing/system-properties/\">this page</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Maven projects in plugin:maven-plugin[Maven Integration Plugin] 2.14 and earlier that use Maven 3.0.x to build will create console notes that can no longer be read by Jenkins, therefore parts of their build output will not be colored/bold.\nThis does not affect freestyle projects.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_new_encrypted_secrets_format\">New encrypted secrets format</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-304</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Encrypted secrets are no AES-128 CBC with random IV instead of AES-128 ECB without IV. Therefore the format of encrypted secrets has been changed.\nWhile existing secrets can still be read, saving configuration files will result in re-encryption of stored secrets in the new format.\nRepeatedly submitting the same form by clicking <em>Apply</em> after changing a password that is stored by Jenkins as a secret will now result in configuration files being changed.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_re_keying_backup_files_removed\">Re-keying backup files removed</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-376</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Re-keying, a process implemented for the Jenkins 1.480.2 security update, and performed only when upgrading Jenkins from versions 1.480.1 or 1.497 or earlier, left behind backup files with no restrictive file access permissions.\nOn the first restart after applying the 2.32.2 update, Jenkins will remove these backup files, if present.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you were relying on file system permissions to protect secrets stored in Jenkins, and are operating an instance that originally was running Jenkins 1.480.1 or 1.497 (or earlier), consider changing any secrets that were stored in Jenkins then.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you are relying on file system permissions to protect secrets stored in your Jenkins home directory backups, it is recommended that you remove the directory <code>JENKINS_HOME/jenkins.security.RekeySecretAdminMonitor/backups</code> from all backups.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_remoting_blacklist_addition\">Remoting blacklist addition</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-383</a></p>\n</div>\n<div class=\"paragraph\">\n<p>The remoting blacklist of classes prohibited from being used in XStream and Java object serialization has been extended. These entries were added:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>^javax[.]imageio[.].*\n^java[.]util[.]ServiceLoader$\n^java[.]net[.]URLClassLoader$</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>No legitimate use of these types is expected, but possible. Previous advice in the <a href=\"/doc/upgrade-guide/2.19/#upgrading-to-jenkins-lts-2-19-3\">upgrade guide for Jenkins 2.19.3</a> still applies.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_user_creation_via_get_no_longer_possible\">User creation via GET no longer possible</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-406</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins administrators were able to create users by accessing the URL <code>/user/example</code>. Doing so would create (for this URL) a new user with the ID <code>example</code>, if it did not exist before.</p>\n</div>\n<div class=\"paragraph\">\n<p>While convenient, this constitutes a <a href=\"https://en.wikipedia.org/wiki/CSRF\">cross-site request forgery</a> vulnerability, as Jenkins administrators may be tricked into creating hundreds of (not always ephemeral) users.\nTherefore this feature has been removed.</p>\n</div>\n<div class=\"paragraph\">\n<p>When using the internal Jenkins user database, new users can be created via <em>Manage Jenkins Â» Manage Users</em> instead.</p>\n</div>\n<div class=\"paragraph\">\n<p>To restore the previous (unsafe) behavior, set the system property <code>hudson.model.User.allowUserCreationViaUrl</code> to <code>true</code> as described on <a href=\"/doc/book/managing/system-properties/\">this page</a>.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_security_warnings_administrative_monitor\">Security warnings administrative monitor</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-40494\">JENKINS-40494</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins will now display warnings when installed components (plugins or core) have known security issues.\nThese warnings are also shown in the plugin manager&#8217;s <em>Available</em> and <em>Updates</em> tabs to warn you before installing a vulnerable plugin, or updating to a vulnerable version.\nAs these warnings are published by your configured update sites, they are generally updated once per day. Note that third party update sites may not support this functionality (yet).</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_winstone_jetty_support_for_ad_hoc_certificate_creation_on_java_8\">Winstone-Jetty support for ad-hoc certificate creation on Java 8</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-25333\">JENKINS-25333</a></p>\n</div>\n<div class=\"paragraph\">\n<p>The embedded Winstone-Jetty container now supports ad-hoc SSL certificate generation when run on Java 8.</p>\n</div>\n<div class=\"paragraph\">\n<p>However, this feature uses internal Oracle JRE APIs, so may break at any time in the future.\nTherefore it is still recommended that admins manually create self-signed certificates and use these instead.</p>\n</div>\n</div>","document":{"title":"Console notes security fix","main":"Console notes security fix"},"author":{"fullName":null},"pageAttributes":{"author_name":null,"author":null,"tags":null,"opengraph":null}}},"pageContext":{"node":{"id":"76c91320-97c1-5eb5-b48c-57ece1c11e45","html":"<div class=\"sect3\">\n<h4 id=\"_console_notes_security_fix\">Console notes security fix</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-382</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Console notes, the often bold or colored additions to build logs by plugins such as plugin:timestamper[Timestamper] or plugin:ansicolor[AnsiColor], that were created before you upgrade to Jenkins 2.43 or 2.32.2 will no longer be loaded for security reasons.\nTo restore the previous (unsafe) behavior, set the system property <code>hudson.console.ConsoleNote.INSECURE</code> to <code>true</code> as described on <a href=\"/doc/book/managing/system-properties/\">this page</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Maven projects in plugin:maven-plugin[Maven Integration Plugin] 2.14 and earlier that use Maven 3.0.x to build will create console notes that can no longer be read by Jenkins, therefore parts of their build output will not be colored/bold.\nThis does not affect freestyle projects.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_new_encrypted_secrets_format\">New encrypted secrets format</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-304</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Encrypted secrets are no AES-128 CBC with random IV instead of AES-128 ECB without IV. Therefore the format of encrypted secrets has been changed.\nWhile existing secrets can still be read, saving configuration files will result in re-encryption of stored secrets in the new format.\nRepeatedly submitting the same form by clicking <em>Apply</em> after changing a password that is stored by Jenkins as a secret will now result in configuration files being changed.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_re_keying_backup_files_removed\">Re-keying backup files removed</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-376</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Re-keying, a process implemented for the Jenkins 1.480.2 security update, and performed only when upgrading Jenkins from versions 1.480.1 or 1.497 or earlier, left behind backup files with no restrictive file access permissions.\nOn the first restart after applying the 2.32.2 update, Jenkins will remove these backup files, if present.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you were relying on file system permissions to protect secrets stored in Jenkins, and are operating an instance that originally was running Jenkins 1.480.1 or 1.497 (or earlier), consider changing any secrets that were stored in Jenkins then.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you are relying on file system permissions to protect secrets stored in your Jenkins home directory backups, it is recommended that you remove the directory <code>JENKINS_HOME/jenkins.security.RekeySecretAdminMonitor/backups</code> from all backups.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_remoting_blacklist_addition\">Remoting blacklist addition</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-383</a></p>\n</div>\n<div class=\"paragraph\">\n<p>The remoting blacklist of classes prohibited from being used in XStream and Java object serialization has been extended. These entries were added:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>^javax[.]imageio[.].*\n^java[.]util[.]ServiceLoader$\n^java[.]net[.]URLClassLoader$</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>No legitimate use of these types is expected, but possible. Previous advice in the <a href=\"/doc/upgrade-guide/2.19/#upgrading-to-jenkins-lts-2-19-3\">upgrade guide for Jenkins 2.19.3</a> still applies.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_user_creation_via_get_no_longer_possible\">User creation via GET no longer possible</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://wiki.jenkins.io/display/SECURITY/Jenkins+Security+Advisory+2017-02-01\">SECURITY-406</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins administrators were able to create users by accessing the URL <code>/user/example</code>. Doing so would create (for this URL) a new user with the ID <code>example</code>, if it did not exist before.</p>\n</div>\n<div class=\"paragraph\">\n<p>While convenient, this constitutes a <a href=\"https://en.wikipedia.org/wiki/CSRF\">cross-site request forgery</a> vulnerability, as Jenkins administrators may be tricked into creating hundreds of (not always ephemeral) users.\nTherefore this feature has been removed.</p>\n</div>\n<div class=\"paragraph\">\n<p>When using the internal Jenkins user database, new users can be created via <em>Manage Jenkins Â» Manage Users</em> instead.</p>\n</div>\n<div class=\"paragraph\">\n<p>To restore the previous (unsafe) behavior, set the system property <code>hudson.model.User.allowUserCreationViaUrl</code> to <code>true</code> as described on <a href=\"/doc/book/managing/system-properties/\">this page</a>.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_security_warnings_administrative_monitor\">Security warnings administrative monitor</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-40494\">JENKINS-40494</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins will now display warnings when installed components (plugins or core) have known security issues.\nThese warnings are also shown in the plugin manager&#8217;s <em>Available</em> and <em>Updates</em> tabs to warn you before installing a vulnerable plugin, or updating to a vulnerable version.\nAs these warnings are published by your configured update sites, they are generally updated once per day. Note that third party update sites may not support this functionality (yet).</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_winstone_jetty_support_for_ad_hoc_certificate_creation_on_java_8\">Winstone-Jetty support for ad-hoc certificate creation on Java 8</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://issues.jenkins.io/browse/JENKINS-25333\">JENKINS-25333</a></p>\n</div>\n<div class=\"paragraph\">\n<p>The embedded Winstone-Jetty container now supports ad-hoc SSL certificate generation when run on Java 8.</p>\n</div>\n<div class=\"paragraph\">\n<p>However, this feature uses internal Oracle JRE APIs, so may break at any time in the future.\nTherefore it is still recommended that admins manually create self-signed certificates and use these instead.</p>\n</div>\n</div>","document":{"title":"Console notes security fix"},"fields":{"slug":"/2-32-2/"},"pageAttributes":{"layout":"upgrades","author":null,"tags":null,"author_name":null,"blog":null,"description":null,"github":null,"irc":null,"linkedin":null,"medium":null,"opengraph":null,"twitter":null,"authoravatar":null}},"id":"76c91320-97c1-5eb5-b48c-57ece1c11e45"}},"staticQueryHashes":[],"slicesMap":{}}